The ``2-matrix_divided`` module
============================

Using ``matrix_divided``
---------------------

Importing function from the module:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Dividing a matrix test:
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
	
	>>> matrix_divided([[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]], 2)
	[[0.5, 1.0], [1.5, 2.0], [2.5, 3.0]]

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
	Traceback (most recent call last):
        ...

	>>> matrix_divided([[1, 2, 3], [4, '5', 6]], 2)
	Traceback (most recent call last):
        ...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

	>>> matrix_divided([[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]], 2)
	[[0.5, 1.0], [1.5, 2.0], [2.5, 3.0]]

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
	Traceback (most recent call last):
    	...
	ZeroDivisionError: division by zero

	>>> matrix_divided([[1, 2, 3], [4, '5', 6]], 2)
	Traceback (most recent call last):
    	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 1)
	[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

	>>> matrix_divided([[1.0, 2.0, 3.0]], 0.5)
	[[2.0, 4.0, 6.0]]

	>>> matrix_divided([[1.5, 2.5], [3.5, 4.5]], 1.5)
	[[1.0, 1.67], [2.33, 3.0]]

	>>> matrix_divided([[10]], 5)
	[[2.0]]

	>>> matrix_divided([[1, 2, 3], [4, 5], [6, 7, 8]], 2)
	Traceback (most recent call last):
    	...
	TypeError: Each row of the matrix must have the same size
